name: Deploy Extension

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch all tags
        run: git fetch --tags

      - name: Get the latest tag
        id: get_tag
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` || echo "1.0.0")
          echo "tag=$latest_tag" >> $GITHUB_ENV

      - name: Increment version number
        id: increment_version
        run: |
          tag=${{ env.tag }}
          IFS='.' read -r -a version_parts <<< "$tag"
          version_parts[2]=$((version_parts[2] + 1))
          new_version="${version_parts[0]}.${version_parts[1]}.${version_parts[2]}"
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Run build script
        working-directory: src
        run: |
          chmod +x build.sh
          ./build.sh ${{ matrix.browser }}

      - name: Update version in manifest.json
        working-directory: src
        run: |
          new_version=${{ env.new_version }}
          if [ "${{ matrix.browser }}" == "chrome" ]; then
          jq --arg version "$new_version" '.version = $version' built-chrome/manifest.json > built-chrome/manifest.json
          elif [ "${{ matrix.browser }}" == "firefox" ]; then
          jq --arg version "$new_version" '.version = $version' built-firefox/manifest.json > built-firefox/manifest.json
          fi

      - name: Zip Chrome extension
        if: matrix.browser == 'chrome'
        working-directory: src
        run: zip -r built-chrome.zip built-chrome

      - name: Zip Firefox extension
        working-directory: src
        if: matrix.browser == 'firefox'
        run: |
          cd built-firefox
          zip -r ../built-firefox.zip *

      - name: Upload Chrome zip artifact
        if: matrix.browser == 'chrome'
        uses: actions/upload-artifact@v4
        with:
          name: built-chrome
          path: src/built-chrome.zip

      - name: Upload Firefox zip artifact
        if: matrix.browser == 'firefox'
        uses: actions/upload-artifact@v4
        with:
          name: built-firefox
          path: src/built-firefox.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox]

    steps:
      - name: Download Chrome zip artifact
        if: matrix.browser == 'chrome'
        uses: actions/download-artifact@v4
        with:
          name: built-chrome
          path: .

      - name: Download Firefox zip artifact
        if: matrix.browser == 'firefox'
        uses: actions/download-artifact@v4
        with:
          name: built-firefox
          path: .

      - name: Upload Chrome extension to Chrome Web Store
        if: matrix.browser == 'chrome'
        run: |
          # Add your Chrome Web Store deployment commands here
          echo "Deploying Chrome extension"

      - name: Upload Firefox extension to Firefox Add-On Store
        if: matrix.browser == 'firefox'
        run: |
          # Add your Firefox Add-On Store deployment commands here
          echo "Deploying Firefox extension"

  release:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch all tags
        run: git fetch --tags

      - name: Get the latest tag
        id: get_tag
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` || echo "1.0.0")
          echo "tag=$latest_tag" >> $GITHUB_ENV

      - name: Increment version number
        id: increment_version
        run: |
          tag=${{ env.tag }}
          IFS='.' read -r -a version_parts <<< "$tag"
          version_parts[2]=$((version_parts[2] + 1))
          new_version="${version_parts[0]}.${version_parts[1]}.${version_parts[2]}"
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Create new tag
        uses: cardinalby/git-tag-action@master
        env:
          TAG: ${{ env.new_version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Chrome zip artifact
        uses: actions/download-artifact@v4
        with:
          name: built-chrome
          path: .

      - name: Download Firefox zip artifact
        uses: actions/download-artifact@v4
        with:
          name: built-firefox
          path: .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.new_version }}
          draft: false
          prerelease: false
          files: |
            built-chrome.zip
            built-firefox.zip